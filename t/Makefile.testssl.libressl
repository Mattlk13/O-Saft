#!/usr/bin/make -rRf
#?
#? NAME
#?      Makefile.testssl.libressl - additional settings for Makefile.testssl
#?
#? DESCRIPTION
#?      This Makefile contains addition settings for Makefile.testssl.
#?      For a detailled description, please see there.
#?
#? SYNOPSIS
#?      include Makefile.testssl.libressl
#?
#? VERSION
#?      @(#) ÄRã_ 1.4 24/06/08 14:03:33
#?
#? AUTHOR
#?      04-jun-24 Achim Hoffmann
#?
# -----------------------------------------------------------------------------

_SID.testssl.libressl  := 1.4
#_MYSELF                := $(firstword $(MAKEFILE_LIST))

#_____________________________________________________________________________
#________________________________________________________________ variables __|

# for description of available variables please see: make vars

# SHA1 checksums for some tarballs:
TESTSSL.src.sig.libressl-3.8.3  = 9d39cd629255863689a5b9caab7b96f898119edf
TESTSSL.src.sig.libressl-3.8.4  = 87fa0a43cf651e2ad58a56745fe9a486bbcddad2
TESTSSL.src.sig.libressl-3.9.2  = e2397fd72dd3d213985a6309cd75de5c945bd035

TESTSSL.src.configure.libressl  =\
	--enable-static --disable-option-checking --disable-tests --enable-nc

# define setting per vendor (type) of SSL-/TLS-server (use vendor's default)
libressl-%:           TESTSSL.vm.version    = 1.4
libressl-%:           TESTSSL.vm.type       = libressl
libressl-%:           TESTSSL.vm.port       = 5443
libressl-%:           TESTSSL.src.packages = $(TESTSSL.default.apk)
libressl-%:           TESTSSL.src.configure += $(TESTSSL.src.configure.libressl)
libressl-%:           TESTSSL.vm.client     = openssl
libressl-%:           TESTSSL.vm.client.help= s_client help
libressl-%:           TESTSSL.vm.server.help= s_server help
libressl-%:           TESTSSL.vm.server.dtls= openssl s_server -dtls -key $(TESTSSL.vm.home)/etc/key.pem -cert $(TESTSSL.vm.home)/etc/cert.pem
libressl-%:           TESTSSL.vm.server.tls = openssl
libressl-%:           TESTSSL.vm.server.args= s_server -accept $(TESTSSL.vm.port) -WWW -www -key $(TESTSSL.vm.home)/etc/key.pem -cert $(TESTSSL.vm.home)/etc/cert.pem
# TODO: s_server -servername $(TESTSSL.vm.hostname)
# TODO: s_server -tls1_2 -tls1_3  # are both together possible?

# sometimes ./autogen.sh does not exist, call is if available only
TESTSSL.vm.build.compile.libressl = \
	test -x ./autogen.sh && ./autogen.sh || true && \\ $(_NL)\
	./configure $(TESTSSL.src.configure)         && \\ $(_NL)\
	make

TESTSSL.src.install.libressl      = \
	apps/ocspcheck/ocspcheck \
	apps/openssl/openssl     \
	apps/nc/nc               \
	ssl/.libs/lib*.a         \
	ssl/.libs/lib*.so*       \
	tls/.libs/lib*.a         \
	tls/.libs/lib*.so*       \
	crypto/.libs/lib*.a      \
	crypto/.libs/lib*.so*

# TODO: starting liberssl's openssl fails with following error:
#    Error configuring OpenSSL
#    140300147796776:error:0EFFF071:configuration file \
#       routines:CRYPTO_internal:unknown \
#       module name:conf/conf_mod.c:196:module=providers
# this happens even we've istalled openssl.cnf, but it seems to be incomplete
# as workaround (6/2024) we use the environment variable OPENSSL_CONF  set to
# the installed $(TESTSSL.vm.home)/etc/ssl/openssl.cnf
# openssl seems to be happy with that
TESTSSL.vm.build.install.libressl = \
	mv $(TESTSSL.src.install.libressl) $(TESTSSL.vm.home)/bin/ && \\ $(_NL)\
	mkdir -p $(TESTSSL.vm.home)/etc/ssl        && \\ $(_NL)\
	mv openssl.cnf $(TESTSSL.vm.home)/etc/ssl  && \\ $(_NL)\
	cd $(TESTSSL.vm.home)/etc/                 && \\ $(_NL)\
	export OPENSSL_CONF=$(TESTSSL.vm.home)/etc/ssl/openssl.cnf && \\ $(_NL)\
	$(TESTSSL.vm.home)/bin/openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -sha256 -days 3650 -nodes -subj "/C=DE/ST=stateless/L=here/O=TESTSSL/OU=none/CN=127.0.0.1"

TESTSSL.vm.build.testing.libressl = \
	echo -n '\# number of ciphers $(TESTSSL.vm.client)):' ; \\ $(_NL)\
	$(TESTSSL.vm.client) ciphers ALL:eNULL:kNULL |tr ':' ' ' | wc -w ; \\ $(_NL)\
	$(TESTSSL.vm.client) ciphers ALL:eNULL:kNULL

TESTSSL.vm.build.cleanup.libressl =

#_____________________________________________________________________________
#________________________________________ private targets, not fully tested __|

# NOTE: only pattern rules are allowed, the first explizit target will become
# the first target in the parent too, usually not wanted ...

