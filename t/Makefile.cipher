#!/usr/bin/make -rRf
#?
#? DESCRIPTION
#?      For more details please see
#?          ../Makefile  Makefile  Makefile.help  Makefile.pod
#?      make help.test.cipher
#?
#? VERSION
#?      @(#) Makefile.cipher 1.30 24/01/05 09:36:06
#?
#? AUTHOR
#?      18-apr-18 Achim Hoffmann
#?
# -----------------------------------------------------------------------------

HELP-help.test.cipher  = targets for testing '$(SRC.pl)' commands and options

_SID.cipher        := 1.30

_MYSELF.cipher     := t/Makefile.cipher
ALL.includes       += $(_MYSELF.cipher)
ALL.inc.type       += cipher
ALL.help.tests     += help.test.cipher

first-cipher-target-is-default: help.test.cipher

ifeq (,$(_SID.test))
    -include t/Makefile
endif

TEST.cipher.hosts      = localhost
ifdef TEST.hosts
    TEST.cipher.hosts  = $(TEST.hosts)
endif

# for testing with private compiled openssl, i.e. version 1.0.2-chacha
TEST.openssl           = /usr/local/openssl/bin/openssl
TEST.openssl-cnf       = /usr/local/openssl/ssl/openssl.cnf

help.test.cipher:        HELP_TYPE = cipher
help.test.cipher-v:      HELP_TYPE = cipher
help.test.cipher-vv:     HELP_TYPE = cipher

HELP-_cipher1          = _________________________________________ testing commands _
HELP-test.cipher       = test all commands with '$(TEST.cipher.hosts)'
HELP-test.cipher.log   = same as test.cipher but store output in '$(TEST.logdir)/'
HELP-_cipher2          = ________________________________ testing a special command _

HELP.cipher         = $(_NL)\
\# Targets can be executed individually, or a group of targets can be executed$(_NL)\
\# by using the pattern rule  test.pattern-%  (see Makefile).$(_NL)\
\# Examples to execute individual targets:$(_NL)\
\#    $(MAKE_COMMAND) testcmd-cipher+cipher--cipher-alpn_localhost$(_NL)\
\# Examples to execute group of similar targets:$(_NL)\
\#    $(MAKE_COMMAND) test.pattern-+cipher$(_NL)\
\# All following examples are the same:$(_NL)\
\#    $(MAKE_COMMAND) testcmd-+cipher TEST.init='--header --enabled localhost'$(_NL)\
\#    $(MAKE_COMMAND) testcmd-+cipher TEST.args='--header --enabled localhost'$(_NL)\
\#$(_NL)\
\# Some of the examples above use  localhost  as hostname by default.

HELP.test.cipher.all   = # no special documentation yet

# SEE Make:target name
# SEE Make:target name prefix

LIST.cipher-mode       := --ciphermode=intern --ciphermode=openssl --ciphermode=dump
LIST.cipher-pattern    := --cipher=AES128-SHA --cipher=0x0300002F  --cipher=IS-UNKNOWN --cipher=is_invalid
#TODO: --cipher=0x0300002F invalid with --ciphermode=openssl; will be fixed later

LIST.cipher-range  := \
	--dummy-no-arg  \
	--range=c0xx    --range=ccxx    --range=ecc       --range=SSLv2_long \
	--range=rfc     --range=long    --range=shifted   --range=SSLv3_SSLv2 \
	--range=SSLv2   --range=SSLv3   --range=TLSv12    --range=TLSv13
# --range=safe  and  --range=huge  disabled, because it takes a long time
LIST.cipher        := \
	--dummy-no-arg  $(LIST.cipher-range) \
	--legacy=owasp  --force-openssl --showhost  \
	--cipher-alpn   --cipher-npn    --cipher-openssl  --cipher-curves \
	--traceKEY  --trace  --trace=2  --trace=3  --trace=4
# NOTE: --traceKEY and not --trace-KEY to avoid addional settings below
#TODO: TEST.args  += --cipher-npns=,
#TODO: TEST.args  += --cipher-npns=, --cipher-npns=,,
#TODO: TEST.args  += --cipher-npns=, --cipher-npns=ecdh_x448

ifndef cipher-macros-generated
    # cannot use GEN.targets because ALL.testcipher instead of ALL.test.cipher
    # is set here; see further use of ALL.testcipher below
    $(foreach arg, $(LIST.cipher),\
	$(eval _target=testcmd-cipher-+cipher-$(subst =,-,$(arg))) \
	$(eval $(_target)_%:  TEST.args = $(arg)) \
	$(eval ALL.testcipher  += $(_target)_)    \
    )
    # for --test-ciphers-list see Makefile.opt
    $(foreach arg, $(LIST.cipher-range),\
	$(eval _target=testarg-cipher-+test-ciphers-list_$(subst =,-,$(arg))) \
	$(eval $(_target):    TEST.args = $(arg)) \
	$(eval ALL.testciphers += $(_target))     \
    )
    $(foreach mode, $(LIST.cipher-mode),\
      $(foreach arg, $(LIST.cipher-pattern),\
	$(eval _target=testcmd-cipher-+cipher-$(subst =,-,$(arg))$(subst =,-,$(mode))) \
	$(eval $(_target)_%:  TEST.args = $(arg) $(mode) ) \
	$(eval ALL.testcipher  += $(_target)_) \
      ) \
    )
    undefine _target
endif

# testarg-cipher-+test-ciphers-list-* do not need a target for testing,  hence
# they are added to ALL.testciphers instead of ALL.testcipher to avoid adding
# the TEST.cipher.hosts below

testarg-cipher-%:                   EXE.pl      = ../$(SRC.pl)
testarg-cipher-+test-ciphers-list_%: TEST.init  = --test-ciphers-list
testcmd-cipher-%:                   EXE.pl      = ../$(SRC.pl)
testcmd-cipher-+cipher-%:           TEST.init   = --trace-CLI --header
testcmd-cipher-+cipher--%:          TEST.init   = --trace-CLI --header +cipher
testcmd-cipher-+cipher_%:           TEST.args  +=
testcmd-cipher-+cipher---trace-%:   TEST.init  += --cipher=AES128-SHA
testcmd-cipher-+cipher---nossltls_%: TEST.args  += --nosslv2 --nosslv3 --notlsv1 --notlsv11 --notlsv12 --notlsv13
    #    simulates a server not responding to ciphers
ALL.testcipher += testcmd-cipher-+cipher--nossltls_

# some more individual tests
testcmd-cipher-+cipher-dh_%:        TEST.args  += +cipher-dh
testcmd-cipher-+cipher-default_%:   TEST.args  += +cipher-default
testcmd-cipher-+cipher-selected_%:  TEST.args  += +cipher-selected
testcmd-cipher-+cipher-strong_%:    TEST.args  += +cipher-strong
testcmd-cipher-+cipher---trace-host_%:  TEST.args  += +cipher --showhost --trace-KEY
testcmd-cipher-+cipher---openssl-local_%:   TEST.args  += --ciphermode=openssl --openssl=$(TEST.openssl) --openssl-cnf=$(TEST.openssl-cnf)
testcmd-cipher-+ciphercheck_%:      TEST.args  += +ciphercheck --trace-CLI --header

# not yet implemented # TODO: hence missing in ALL.testciphermisc below
testcmd-cipher-+cipher-order_%:     TEST.args  += +cipher-order
testcmd-cipher-+cipher-weak_%:      TEST.args  += +cipher-weak
ALL.testciphermisc     = \
	testcmd-cipher-+cipher-dh_      \
	testcmd-cipher-+cipher-default_ \
	testcmd-cipher-+cipher-selected_ \
	testcmd-cipher-+cipher-strong_  \
	testcmd-cipher-+ciphercheck_    \
	testcmd-cipher-+cipher--trace-host_ \
	testcmd-cipher-+cipher---openssl-local_

ALL.test.cipher        = $(foreach host,$(TEST.cipher.hosts),$(ALL.testcipher:%=%$(host)))
ALL.test.cipher       += $(foreach host,$(TEST.cipher.hosts),$(ALL.testciphermisc:%=%$(host)))
ALL.test.cipher       += $(ALL.testciphers)
ALL.test.cipher.log   += $(ALL.test.cipher:%=%.log)

test.cipher.log-compare:   TEST.target_prefix  = testcmd-cipher
test.cipher.log-move:      TEST.target_prefix  = testcmd-cipher
test.cipher.log:           TEST.target_prefix  = testcmd-cipher

test.cipher:           $(ALL.test.cipher)
test.cipher.log:       $(ALL.test.cipher.log) test.log-compare-hint
