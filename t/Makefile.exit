#! /usr/bin/make -rRf
#?
#? DESCRIPTION
#?      For more details please see
#?          ../Makefile  Makefile  Makefile.help  Makefile.pod
#?      make help.test.exit
#?
#? VERSION
#?      @(#) Makefile.exit 1.24 22/02/21 17:33:49
#?
#? AUTHOR
#?      18-apr-18 Achim Hoffmann
#?
# -----------------------------------------------------------------------------

HELP-help.test.exit = targets for testing '$(SRC.pl)' --exit= option

_SID.exit          := 1.24

_MYSELF.exit       := t/Makefile.exit
ALL.includes       += $(_MYSELF.exit)
ALL.inc.type       += exit
ALL.help.tests     += help.test.exit

ifeq (,$(_SID.test))
    -include t/Makefile
endif

TEST.exit.hosts     = localhost
ifdef TEST.hosts
    TEST.exit.hosts = $(TEST.hosts)
endif

first-exit-target-is-default: help.test.exit

help.test.exit:       HELP_TYPE = exit
help.test.exit-v:     HELP_TYPE = exit
help.test.exit-vv:    HELP_TYPE = exit

HELP-_exit1         = ___________________________________ testing --exit* option _
HELP-test.exit      = test --exit=* options
HELP-test.exit.log  = same as test.exit but store output in '$(TEST.logdir)/'

HELP.exit           = # no special documentation yet
HELP.test.exit.all  = # no special documentation yet

# all known --exit=  are shown with:  o-saft.pl --norc --help=exit

# SEE Make:target name
# SEE Make:target name prefix
# using prefix testmsg- to avoid conflict with pattern rule testcmd-%

testmsg-exit-%:         EXE.pl      = ../$(SRC.pl)
testmsg-exit-%:         TEST.init   = --trace-CLI +cn $(TEST.host)

testmsg-exit-000:       TEST.args  += --exit=invalid_label_to_show_failed-status
testmsg-exit-BEGIN0:    TEST.args  += --exit=BEGIN0
testmsg-exit-BEGIN1:    TEST.args  += --exit=BEGIN1
testmsg-exit-INIT0:     TEST.args  += --exit=INIT0
testmsg-exit-WARN:      TEST.args  += --exit=WARN   +force-warning
testmsg-exit-CONF0:     TEST.args  += --exit=CONF0
testmsg-exit-CONF1:     TEST.args  += --exit=CONF1
testmsg-exit-INIT1:     TEST.args  += --exit=INIT1
testmsg-exit-ARGS:      TEST.args  += --exit=ARGS
testmsg-exit-MAIN:      TEST.args  += --exit=MAIN
testmsg-exit-HOST0:     TEST.args  += --exit=HOST0
testmsg-exit-HOST1:     TEST.args  += --exit=HOST1
testmsg-exit-HOST2:     TEST.args  += --exit=HOST2
testmsg-exit-HOST3:     TEST.args  += --exit=HOST3
testmsg-exit-HOST4:     TEST.args  += --exit=HOST4
testmsg-exit-HOST5:     TEST.args  += --exit=HOST5
testmsg-exit-HOST6:     TEST.args  += --exit=HOST6
#testmsg-exit-HOST7:     TEST.args  += --exit=HOST7
testmsg-exit-HOST8:     TEST.args  += --exit=HOST8
testmsg-exit-HOST9:     TEST.args  += --exit=HOST9
testmsg-exit-END:       TEST.args  += --exit=END

ALL.test.exit       = $(shell awk -F: '/^testmsg-exit-%/{next} /^testmsg-exit/{arr[$$1]=1}$(_EXE.print_arr_END.awk)' $(_MYSELF.exit))

testmsg-exit-%: message-%
	@$(TRACE.target)

_TEST.exit.log  = $(TEST.logdir)/test.exit.log-$(TEST.today)

$(_TEST.exit.log):
	@echo "# $(_MYSELF.exit) $(_SID.exit): $(MAKE) test.exit.log" > $@
	@$(MAKE) test.exit >> $@ 2>&1

# not yet needed: test.log-compare-hint
# TODO: diff not yet working proper
test.exit.log: $(_TEST.exit.log) 
	@$(TRACE.target)
	@$(TRACE.target.log)
	@diff $(TEST.logdir)/$@ $(_TEST.exit.log) \
	    && rm $(_TEST.exit.log) \
	    || mv $(_TEST.exit.log) $(TEST.logdir)/$@
	@-test -f $(TEST.logdir)/$@  ||  mv $(_TEST.exit.log) $(TEST.logdir)/$@
	@ls -l    $(TEST.logdir)/$@*
	@-$(EXE.log-compare-hint)
# TODO: same target as test.warnings.log

ALL.test.exit.log   = test.exit.log

test.exit.log-compare:  TEST.target_prefix  = test.exit
test.exit.log-move:     TEST.target_prefix  = test.exit

test.exit:          $(ALL.test.exit)
test.exit.log:      $(ALL.test.exit.log)
    # test.log-compare-hinz not yet used because we only have one .log file
