#! /usr/bin/make -rRf
#?
#? DESCRIPTION
#?      For more details please see
#?          ../Makefile  Makefile  Makefile.help  Makefile.pod
#?      make help.test.legacy
#?
#? VERSION
#?      @(#) Makefile.legacy 1.7 22/09/18 21:03:58
#?
#? AUTHOR
#?      18-apr-18 Achim Hoffmann
#?
# -----------------------------------------------------------------------------

HELP-help.test.legacy = targets for testing '$(SRC.pl)' +cipher --legacy=* commands

_SID.legacy        := 1.7

_MYSELF.legacy     := t/Makefile.legacy
ALL.includes       += $(_MYSELF.legacy)
ALL.inc.type       += legacy
ALL.help.tests     += help.test.legacy

ifeq (,$(_SID.test))
    -include t/Makefile
endif

TEST.legacy.hosts   = localhost
ifdef TEST.hosts
    TEST.legacy.hosts  = $(TEST.hosts)
endif

first-legacy-target-is-default: help.test.legacy

help.test.legacy:   HELP_TYPE = legacy
help.test.legacy-v: HELP_TYPE = legacy
help.test.legacy-vv:HELP_TYPE = legacy

HELP-_legacy1       = _________________________________________ testing commands _
HELP-test.legacy        = test all commands with '$(TEST.legacy.hosts)'
HELP-test.legacy.log    = same as test.legacy but store output in '$(TEST.logdir)/'

HELP.legacy             = # not yet used
HELP.test.legacy.all    = # no special documentation yet

# other SSL-related test tools, not used in ths project, just fo documentation
_TEST.tools.ssl     = \
	cnark.pl    analyze-ssl.pl      manyssl      SSLAudit.pl \
	sslmap.py   sslscan  ssltest.pl sslthing.sh  sslyze.py       testssl.sh \
	TestSSLServer.jar  tls-check.pl tls-scan     TLSSLed_v1.3.sh vessl
_TEST.tools.vulns   = \
	beast.pl    ccs-injection.sh    poet ssl-dos robot-detect \
	ssl-renegotiation.sh OSSL_CCS_InjectTest.py \
	bash-heartbleed.sh   check-ssl-heartbleed.pl ssl-check-heartbleed.pl ssltest_heartbeat.py
_TEST.tools.cert    = \
	ssl-cert-check       chksslkey  smtp_tls_cert.pl
_TEST.tools.cipher  = \
	athena-ssl-cipher-check_v062.jar ssl-cipher-check.pl         tlsenum
_TEST.tools.unix    = \
	sslcat      sslsniff sslstrip   stunnel
_TEST.tools.windows = \
	SSLAudit.exe SSLCertScanner.exe ssldiagnos.exe SSLPressure.exe \
	sslscan.exe  TestSSLServer.exe
ALL.tools.ssl       = $(_TEST.tools.ssl) $(_TEST.tools.vulns) $(_TEST.tools.cert) \
		      $(_TEST.tools.cipher) $(_TEST.tools.unix) $(_TEST.tools.windows)

LIST.legacy        := \
	cnark   openssl   sslaudit  sslcipher   ssldiagnos  sslscan \
	ssltest ssltest-g sslyze testsslserver  thcsslcheck \
	compact full      simple    owasp

# SEE Make:target name
# SEE Make:target name prefix

testarg-legacy-+cipher%:    EXE.pl      = ../$(SRC.pl)
testarg-legacy-+cipher%:    TEST.init   = --trace-CLI --header --enabled +cipher $(TEST.legacy.hosts)

ifndef legacy-macros-generated
    _TEST.legacy   := testarg-legacy-+cipher--legacy
    $(foreach arg, $(LIST.legacy),\
	$(eval _target=$(_TEST.legacy)-$(arg)) \
	$(eval $(_target)_%:        TEST.args = --legacy=$(arg) )\
	$(eval $(_target)--norc_%:  TEST.args = --legacy=$(arg) --norc )\
	$(eval ALL.testlegacy  += $(_target)_ )       \
	$(eval ALL.testlegacy  += $(_target)--norc_ ) \
    )
    undefine _target
    undefine _TEST.legacy
endif

ALL.test.legacy     = $(foreach host,$(TEST.legacy.hosts),$(ALL.testlegacy:%=%$(host)))
ALL.test.legacy.log += $(ALL.test.legacy:%=%.log)

test.legacy.log-compare:    TEST.target_prefix  = testarg-legacy-
test.legacy.log-move:       TEST.target_prefix  = testarg-legacy-
test.legacy.log:            TEST.target_prefix  = testarg-legacy-

test.legacy:        $(ALL.test.legacy)
test.legacy.log:    $(ALL.test.legacy.log) test.log-compare-hint
